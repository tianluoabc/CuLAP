Last login: Mon Jun 21 20:08:36 on ttys001
mohit_mhjn@Mohits-MacBook-Pro ~ % cd Desktop/projects/MTT
mohit_mhjn@Mohits-MacBook-Pro MTT % git branch -a
* dev-ColumnGeneration
  dev-RMAP
  master
  remotes/origin/dev-ColumnGeneration
  remotes/origin/dev-RMAP
  remotes/origin/master
mohit_mhjn@Mohits-MacBook-Pro MTT % git checkout dev-RMAP
error: Your local changes to the following files would be overwritten by checkout:
	config.cfg
	src/solver.cpp
Please commit your changes or stash them before you switch branches.
Aborting
mohit_mhjn@Mohits-MacBook-Pro MTT % git status
On branch dev-ColumnGeneration
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   config.cfg
	modified:   src/solver.cpp

no changes added to commit (use "git add" and/or "git commit -a")
mohit_mhjn@Mohits-MacBook-Pro MTT % git add .
mohit_mhjn@Mohits-MacBook-Pro MTT % git comit -m "stash changes to CG algorithm"
git: 'comit' is not a git command. See 'git --help'.

The most similar command is
	commit
mohit_mhjn@Mohits-MacBook-Pro MTT % git commit -m "stash changes to CG algorithm"
[dev-ColumnGeneration efa4e05] stash changes to CG algorithm
 2 files changed, 23 insertions(+), 4 deletions(-)
mohit_mhjn@Mohits-MacBook-Pro MTT % git checkout dev-RMAP
Switched to branch 'dev-RMAP'
mohit_mhjn@Mohits-MacBook-Pro MTT % ls
Makefile		data_gen.h		logs_CG			run.sh			scratch			spline_clamped		structs.h		utils.h
a.out			experiments		main.cpp		scoring.cpp		solver.cpp		spline_natural		trajectories.txt
data_gen.cpp		logs			rev1			scoring.h		solver.h		src			utils.cpp
mohit_mhjn@Mohits-MacBook-Pro MTT % git checkout -dev-ColumnGeneration
error: unknown switch `e'
usage: git checkout [<options>] <branch>
   or: git checkout [<options>] [<branch>] -- <file>...

    -b <branch>           create and checkout a new branch
    -B <branch>           create/reset and checkout a branch
    -l                    create reflog for new branch
    --guess               second guess 'git checkout <no-such-branch>' (default)
    --overlay             use overlay mode (default)
    -q, --quiet           suppress progress reporting
    --recurse-submodules[=<checkout>]
                          control recursive updating of submodules
    --progress            force progress reporting
    -m, --merge           perform a 3-way merge with the new branch
    --conflict <style>    conflict style (merge or diff3)
    -d, --detach          detach HEAD at named commit
    -t, --track           set upstream info for new branch
    -f, --force           force checkout (throw away local modifications)
    --orphan <new-branch>
                          new unparented branch
    --overwrite-ignore    update ignored files (default)
    --ignore-other-worktrees
                          do not check if another worktree is holding the given ref
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -p, --patch           select hunks interactively
    --ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character

mohit_mhjn@Mohits-MacBook-Pro MTT % git checkout dev-ColumnGeneration
Switched to branch 'dev-ColumnGeneration'
mohit_mhjn@Mohits-MacBook-Pro MTT % ls
Makefile		a.out			experiments		logs_CG			run.sh			spline_clamped		src
README.md		config.cfg		logs			rev1			scratch			spline_natural		trajectories.txt
mohit_mhjn@Mohits-MacBook-Pro MTT % cd ..
mohit_mhjn@Mohits-MacBook-Pro projects % cd ..
mohit_mhjn@Mohits-MacBook-Pro Desktop % cd RA_/
mohit_mhjn@Mohits-MacBook-Pro RA_ % ls
1-s2.0-S0305054812000366-main.pdf				GPU_MAP_IEEE_TASE.pdf						MultitargetTracking
25146879.pdf							Hillier_and_Lieberman_Introduction_to_operationsBookFi.pdf	NATU-THESIS-2018.pdf
25146879_2.pdf							Introduction to Linear Optimization BT.pdf			QAP-RLT2
Bazaraa-LP[430912].pdf						LAP_main.pdf							QAP_MAIN.pdf
CuHungarianSingleDevice-master					Latex - Buffer.rtf						main.pdf
CudaMasteclass							MDADC_main.cpp
FUSION_2019_MAP_Presentation.pdf				MTT+MAP_fusion
mohit_mhjn@Mohits-MacBook-Pro RA_ % cd CuHungarianSingleDevice-master
mohit_mhjn@Mohits-MacBook-Pro CuHungarianSingleDevice-master % ls -a
.		..		.DS_Store	.gitignore
mohit_mhjn@Mohits-MacBook-Pro CuHungarianSingleDevice-master % cat .gitignore
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/
mohit_mhjn@Mohits-MacBook-Pro CuHungarianSingleDevice-master % cat .gitignore < xclip
zsh: no such file or directory: xclip
mohit_mhjn@Mohits-MacBook-Pro CuHungarianSingleDevice-master % cat .gitignore >> xclip
mohit_mhjn@Mohits-MacBook-Pro CuHungarianSingleDevice-master % cd ..
mohit_mhjn@Mohits-MacBook-Pro RA_ % cd ..
mohit_mhjn@Mohits-MacBook-Pro Desktop % cd projects
mohit_mhjn@Mohits-MacBook-Pro projects % ls
MTT			helloworld.cpp		hsnf			mohit-mhjn.github.io	test_IP.py		ticdat_samples		untitled folder
cudaserver		howdy			junkyard		rapid-factory		ticdat			ticdat_script_generator
mohit_mhjn@Mohits-MacBook-Pro projects % cd untitled\ folder
mohit_mhjn@Mohits-MacBook-Pro untitled folder % ls
CuHungarianSingleDevice	LICENSE			README.md
mohit_mhjn@Mohits-MacBook-Pro untitled folder % nano .gitignore
mohit_mhjn@Mohits-MacBook-Pro untitled folder % cat .gitignore

  GNU nano 2.0.6                                                       File: .gitignore


# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
                                                                                             [ Read 50 lines ]
^G Get Help                       ^O WriteOut                       ^R Read File                      ^Y Prev Page                      ^K Cut Text                       ^C Cur Pos
^X Exit                           ^J Justify                        ^W Where Is                       ^V Next Page                      ^U UnCut Text                     ^T To Spell
# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/
